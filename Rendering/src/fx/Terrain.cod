//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    Light   gLights[10];                // Offset:    0, size: 1120
    float   gNumLights;                 // Offset: 1120, size:    4
    float3  gEyePosW;                   // Offset: 1124, size:   12
    float   gFogStart;                  // Offset: 1136, size:    4
    float   gFogRange;                  // Offset: 1140, size:    4
    float4  gFogColor;                  // Offset: 1152, size:   16
    float   gTexelCellSpaceU;           // Offset: 1168, size:    4
    float   gTexelCellSpaceV;           // Offset: 1172, size:    4
    float   gWorldCellSpace;            // Offset: 1176, size:    4
    float   gTexScale = 1;              // Offset: 1180, size:    4
}

cbuffer cbPerObject
{
    float4x4 gViewProj;                 // Offset:    0, size:   64
    float4x4 gShadowTransform;          // Offset:   64, size:   64
    Material gMaterial;                 // Offset:  128, size:   48
}

//
// 8 local object(s)
//
Texture2DArray gLayerMapArray;
Texture2D gBlendMap;
Texture2D gHeightMap;
Texture2D gShadowMap;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState samHeightmap
{
    Filter   = uint(MIN_MAG_LINEAR_MIP_POINT /* 20 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerComparisonState samShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};
RasterizerState SolidMode
{
    FillMode = uint(SOLID /* 3 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 TerrainTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64
                //   float4x4 gShadowTransform;         // Offset:   64 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  128
                //       float4 diffuse;                // Offset:  144
                //       float4 specular;               // Offset:  160
                //
                //   } gMaterial;                       // Offset:  128 Size:    48 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samHeightmap                      sampler      NA          NA    0        1
                // gHeightMap                        texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   x z 
                // NORMAL                   0   xyz         1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyz         3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TEXCOORD                 1   xyzw        3     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input v0.xz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o3.xyzw
                dcl_temps 5
                
                #line 90 "F:\Users\Axel\Documents\Projects\Devbox\Rendering\src\fx\Terrain.fx"
                sample_l_indexable(texture2d)(float,float,float,float) r0.y, v2.xyxx, t0.yxzw, s0, l(0.000000)  // vin<1:Inf>
                mov r1.y, r0.y  // vin<1:Inf>
                mov r1.xz, v0.xxzx  // vout<4,6>
                mov r1.y, r1.y  // vout<5:Inf>
                
                #line 94
                mov r0.xz, v0.xxzx
                mov r0.w, l(1.000000)
                dp4 r2.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r2.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r2.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r2.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                
                #line 97
                mov r3.xy, v2.xyxx  // vout<7,8>
                
                #line 100
                dp4 r4.x, r0.xyzw, cb0[4].xyzw  // vout<9:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[5].xyzw  // vout<10:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[6].xyzw  // vout<11:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[7].xyzw  // vout<12:NaN:Inf>
                mov o0.xyzw, r2.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xyzw, r4.xyzw  // VS<9:NaN:Inf,10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4,5:Inf,6>
                mov o2.xy, r3.xyxx  // VS<7,8>
                ret 
                // Approximately 20 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct Light
                //   {
                //       
                //       struct Material
                //       {
                //           
                //           float4 ambient;            // Offset:    0
                //           float4 diffuse;            // Offset:   16
                //           float4 specular;           // Offset:   32
                //
                //       } mat;                         // Offset:    0
                //       float3 pos;                    // Offset:   48
                //       float range;                   // Offset:   60
                //       float3 dir;                    // Offset:   64
                //       float spot;                    // Offset:   76
                //       float3 att;                    // Offset:   80
                //       float type;                    // Offset:   92
                //       float3 intensity;              // Offset:   96
                //       float id;                      // Offset:  108
                //
                //   } gLights[10];                     // Offset:    0 Size:  1120
                //   float gNumLights;                  // Offset: 1120 Size:     4
                //   float3 gEyePosW;                   // Offset: 1124 Size:    12
                //   float gFogStart;                   // Offset: 1136 Size:     4
                //   float gFogRange;                   // Offset: 1140 Size:     4
                //   float4 gFogColor;                  // Offset: 1152 Size:    16
                //   float gTexelCellSpaceU;            // Offset: 1168 Size:     4
                //   float gTexelCellSpaceV;            // Offset: 1172 Size:     4
                //   float gWorldCellSpace;             // Offset: 1176 Size:     4
                //   float gTexScale;                   // Offset: 1180 Size:     4
                //      = 0x3f800000 
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:   64 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  128
                //       float4 diffuse;                // Offset:  144
                //       float4 specular;               // Offset:  160
                //
                //   } gMaterial;                       // Offset:  128 Size:    48
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samHeightmap                      sampler      NA          NA    1        1
                // gLayerMapArray                    texture  float4     2darray    0        1
                // gBlendMap                         texture  float4          2d    1        1
                // gHeightMap                        texture  float4          2d    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TEXCOORD                 1   xyzw        3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[74], dynamicIndexed
                dcl_constantbuffer cb1[11], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xy
                dcl_output o0.xyzw
                dcl_temps 27
                
                #line 108 "F:\Users\Axel\Documents\Projects\Devbox\Rendering\src\fx\Terrain.fx"
                mov r0.x, -cb0[73].x
                mov r0.y, l(0)
                add r0.xy, r0.xyxx, v2.xyxx  // leftTex<0:Inf,1>
                mov r1.x, cb0[73].x
                mov r1.y, l(0)
                add r0.zw, r1.xxxy, v2.xxxy  // rightTex<0:Inf,1>
                mov r1.x, l(0)
                mov r1.y, cb0[73].y
                add r1.xy, r1.xyxx, v2.xyxx  // bottomTex<0,1:Inf>
                mov r2.x, l(0)
                mov r2.y, -cb0[73].y
                add r1.zw, r2.xxxy, v2.xxxy  // topTex<0,1:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.xyzw, s1, l(0.000000)
                mov r0.x, r0.x  // leftY<0:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.y, r0.zwzz, t2.yxzw, s1, l(0.000000)
                mov r0.y, r0.y  // rightY<0:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.z, r1.xyxx, t2.yzxw, s1, l(0.000000)
                mov r0.z, r0.z  // bottomY<0:Inf>
                sample_l_indexable(texture2d)(float,float,float,float) r0.w, r1.zwzz, t2.yzwx, s1, l(0.000000)
                mov r0.w, r0.w  // topY<0:Inf>
                mov r0.x, -r0.x
                add r1.z, r0.x, r0.y
                mul r1.y, cb0[73].z, l(2.000000)
                mov r1.x, l(0)
                dp3 r0.x, r1.xyzx, r1.xyzx
                rsq r0.x, r0.x
                mul r1.xyz, r0.xxxx, r1.xyzx  // tangent<2: 0f,0:NaN:Inf,1:NaN:Inf>
                
                #line 119
                mov r0.x, -r0.w
                add r0.x, r0.x, r0.z
                mov r0.z, l(0)
                mul r0.y, cb0[73].z, l(-2.000000)
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // bitan<1:NaN:Inf,2:NaN:Inf,0: 0f>
                mul r2.xyz, r0.yzxy, r1.zxyz
                mul r0.xyz, r0.xyzx, r1.xyzx
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // normalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 123
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[70].yzwy  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 126
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 129
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                mul r2.xy, v2.xyxx, cb0[73].wwww  // scaledTex<0:Inf,1:Inf>
                
                #line 137
                mov r2.z, l(0)
                sample_indexable(texture2darray)(float,float,float,float) r3.xyzw, r2.xyzx, t0.xyzw, s0  // c0<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r2.w, l(1.000000)
                sample_indexable(texture2darray)(float,float,float,float) r4.xyzw, r2.xywx, t0.xyzw, s0  // c1<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r2.z, l(2.000000)
                sample_indexable(texture2darray)(float,float,float,float) r5.xyzw, r2.xyzx, t0.xyzw, s0  // c2<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r2.w, l(3.000000)
                sample_indexable(texture2darray)(float,float,float,float) r6.xyzw, r2.xywx, t0.xyzw, s0  // c3<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r2.z, l(4.000000)
                sample_indexable(texture2darray)(float,float,float,float) r2.xyzw, r2.xyzx, t0.xyzw, s0  // c4<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 144
                sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v2.xyxx, t1.xyzw, s0  // t<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 147
                mov r3.xyzw, r3.xyzw  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r8.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r8.xyzw
                mul r4.xyzw, r4.xyzw, r7.xxxx
                add r3.xyzw, r3.xyzw, r4.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, r7.yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r7.zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r4.xyzw, -r3.xyzw
                add r2.xyzw, r2.xyzw, r4.xyzw
                mul r2.xyzw, r2.xyzw, r7.wwww
                add r2.xyzw, r2.xyzw, r3.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 159
                nop 
                ftoi r1.w, cb0[70].x  // numLights<0>
                mov r3.xyzw, cb1[10].xyzw  // material<8,9,10,11>
                mov r4.xyz, cb1[8].xyzx  // material<0,1,2>
                mov r5.xyz, cb1[9].xyzx  // material<4,5,6>
                mov r6.xyz, v1.xyzx  // posW<0,1,2>
                mov r0.xyz, r0.xyzx  // normalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEyeW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, r2.xyzx  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 168 "LightHelper.fx"
                mov r7.xyz, l(0,0,0,0)  // ambient<0: -0f,1: -0f,2: -0f>
                
                #line 173
                mov r4.w, l(0)  // i<0: 0>
                mov r8.xyz, r7.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r10.xyz, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.w, r4.w  // i<0>
                loop 
                  ilt r6.w, r5.w, r1.w
                  breakc_z r6.w
                
                #line 178
                  imul null, r6.w, r5.w, l(7)
                  eq r7.w, cb0[r6.w + 5].w, l(0.000000)
                  if_nz r7.w
                    nop 
                    mov r11.xyz, r4.xyzx  // mat<0,1,2>
                    mov r12.xyz, r5.xyzx  // mat<4,5,6>
                    mov r13.xyzw, r3.xyzw  // mat<8,9,10,11>
                    mov r14.xyz, cb0[r6.w + 0].xyzx  // light<0,1,2>
                    mov r15.xyz, cb0[r6.w + 1].xyzx  // light<4,5,6>
                    mov r16.xyz, cb0[r6.w + 2].xyzx  // light<8,9,10>
                    mov r17.xyz, cb0[r6.w + 4].xyzx  // light<16,17,18>
                    mov r18.xyz, cb0[r6.w + 6].xyzx  // light<24,25,26>
                    mov r19.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mov r20.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 43
                    mov r17.xyz, -r17.xyzx  // lightVec<0,1,2>
                
                #line 46
                    mul r11.xyz, r11.xyzx, r14.xyzx
                    mul r11.xyz, r18.xxxx, r11.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 51
                    dp3 r7.w, r17.xyzx, r19.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 55
                    lt r8.w, l(0.000000), r7.w
                    mov r14.xyz, -r17.xyzx
                    dp3 r9.w, r14.xyzx, r19.xyzx
                    add r9.w, r9.w, r9.w
                    mov r9.w, -r9.w
                    mul r17.xyz, r9.wwww, r19.xyzx
                    add r14.xyz, r14.xyzx, r17.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    dp3 r9.w, r14.xyzx, r20.xyzx
                    max r9.w, r9.w, l(0.000000)
                    log r9.w, r9.w
                    mul r9.w, r9.w, r13.w
                    exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                    mul r12.xyz, r12.xyzx, r7.wwww
                    mul r12.xyz, r15.xyzx, r12.xyzx
                    mul r12.xyz, r18.yyyy, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mul r13.xyz, r13.xyzx, r9.wwww
                    mul r13.xyz, r16.xyzx, r13.xyzx
                    mul r13.xyz, r18.zzzz, r13.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 55
                    movc r12.xyz, r8.wwww, r12.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    movc r13.xyz, r8.wwww, r13.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 179
                    mov r11.xyz, r11.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mov r12.xyz, r12.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    mov r13.xyz, r13.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  else 
                    eq r7.w, cb0[r6.w + 5].w, l(1.000000)
                    if_nz r7.w
                      nop 
                      mov r14.xyz, r4.xyzx  // mat<0,1,2>
                      mov r15.xyz, r5.xyzx  // mat<4,5,6>
                      mov r16.xyzw, r3.xyzw  // mat<8,9,10,11>
                      mov r17.xyz, cb0[r6.w + 0].xyzx  // light<0,1,2>
                      mov r18.xyz, cb0[r6.w + 1].xyzx  // light<4,5,6>
                      mov r19.xyz, cb0[r6.w + 2].xyzx  // light<8,9,10>
                      mov r20.xyz, cb0[r6.w + 3].xyzx  // light<12,13,14>
                      mov r21.xyz, cb0[r6.w + 5].xyzx  // light<20,21,22>
                      mov r7.w, cb0[r6.w + 3].w  // light<15>
                      mov r22.xyz, cb0[r6.w + 6].xyzx  // light<24,25,26>
                      mov r23.xyz, r6.xyzx  // pos<0,1,2>
                      mov r24.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                      mov r25.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 74
                      mov r23.xyz, -r23.xyzx
                      add r20.xyz, r20.xyzx, r23.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 77
                      dp3 r8.w, r20.xyzx, r20.xyzx
                      sqrt r23.y, r8.w  // d<0:NaN:Inf>
                
                #line 80
                      lt r7.w, r7.w, r23.y
                
                #line 84
                      if_z r7.w
                        div r20.xyz, r20.xyzx, r23.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 87
                        mul r14.xyz, r14.xyzx, r17.xyzx
                        mul r11.xyz, r22.xxxx, r14.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 92
                        dp3 r7.w, r20.xyzx, r24.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 96
                        lt r8.w, l(0.000000), r7.w
                        mov r14.xyz, -r20.xyzx
                        dp3 r9.w, r14.xyzx, r24.xyzx
                        add r9.w, r9.w, r9.w
                        mov r9.w, -r9.w
                        mul r17.xyz, r9.wwww, r24.xyzx
                        add r14.xyz, r14.xyzx, r17.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                        dp3 r9.w, r14.xyzx, r25.xyzx
                        max r9.w, r9.w, l(0.000000)
                        log r9.w, r9.w
                        mul r9.w, r9.w, r16.w
                        exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                        mul r14.xyz, r15.xyzx, r7.wwww
                        mul r14.xyz, r18.xyzx, r14.xyzx
                        mul r14.xyz, r22.yyyy, r14.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                        mul r15.xyz, r16.xyzx, r9.wwww
                        mul r15.xyz, r19.xyzx, r15.xyzx
                        mul r15.xyz, r22.zzzz, r15.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 96
                        movc r14.xyz, r8.wwww, r14.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                        movc r15.xyz, r8.wwww, r15.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 106
                        mul r23.z, r23.y, r23.y
                        mov r23.x, l(1.000000)
                        dp3 r7.w, r21.xyzx, r23.xyzx
                        div r7.w, l(1.000000), r7.w  // att<0:NaN:Inf>
                        mul r12.xyz, r7.wwww, r14.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                        mul r13.xyz, r7.wwww, r15.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 84
                      else 
                        mov r11.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                        mov r12.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                        mov r13.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                      endif 
                
                #line 181
                      mov r11.xyz, r11.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                      mov r12.xyz, r12.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                      mov r13.xyz, r13.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                    else 
                      eq r7.w, cb0[r6.w + 5].w, l(2.000000)
                      if_nz r7.w
                        nop 
                        mov r14.xyz, r4.xyzx  // mat<0,1,2>
                        mov r15.xyz, r5.xyzx  // mat<4,5,6>
                        mov r16.xyzw, r3.xyzw  // mat<8,9,10,11>
                        mov r17.xyz, cb0[r6.w + 0].xyzx  // light<0,1,2>
                        mov r18.xyz, cb0[r6.w + 1].xyzx  // light<4,5,6>
                        mov r19.xyz, cb0[r6.w + 2].xyzx  // light<8,9,10>
                        mov r20.xyz, cb0[r6.w + 3].xyzx  // light<12,13,14>
                        mov r21.xyz, cb0[r6.w + 4].xyzx  // light<16,17,18>
                        mov r22.xyz, cb0[r6.w + 5].xyzx  // light<20,21,22>
                        mov r7.w, cb0[r6.w + 3].w  // light<15>
                        mov r8.w, cb0[r6.w + 4].w  // light<19>
                        mov r23.xyz, cb0[r6.w + 6].xyzx  // light<24,25,26>
                        mov r24.xyz, r6.xyzx  // pos<0,1,2>
                        mov r25.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                        mov r26.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 121
                        mov r24.xyz, -r24.xyzx
                        add r20.xyz, r20.xyzx, r24.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 124
                        dp3 r6.w, r20.xyzx, r20.xyzx
                        sqrt r24.y, r6.w  // d<0:NaN:Inf>
                
                #line 127
                        lt r6.w, r7.w, r24.y
                
                #line 131
                        if_z r6.w
                          div r20.xyz, r20.xyzx, r24.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 134
                          mul r14.xyz, r14.xyzx, r17.xyzx
                          mul r14.xyz, r23.xxxx, r14.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 139
                          dp3 r6.w, r20.xyzx, r25.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 143
                          lt r7.w, l(0.000000), r6.w
                          mov r17.xyz, -r20.xyzx
                          dp3 r9.w, r17.xyzx, r25.xyzx
                          add r9.w, r9.w, r9.w
                          mov r9.w, -r9.w
                          mul r20.xyz, r9.wwww, r25.xyzx
                          add r20.xyz, r17.xyzx, r20.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                          dp3 r9.w, r20.xyzx, r26.xyzx
                          max r9.w, r9.w, l(0.000000)
                          log r9.w, r9.w
                          mul r9.w, r9.w, r16.w
                          exp r9.w, r9.w  // specFactor<0:NaN:Inf>
                          mul r15.xyz, r15.xyzx, r6.wwww
                          mul r15.xyz, r18.xyzx, r15.xyzx
                          mul r15.xyz, r23.yyyy, r15.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                          mul r16.xyz, r16.xyzx, r9.wwww
                          mul r16.xyz, r19.xyzx, r16.xyzx
                          mul r16.xyz, r23.zzzz, r16.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 143
                          movc r15.xyz, r7.wwww, r15.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                          movc r16.xyz, r7.wwww, r16.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                          dp3 r6.w, r17.xyzx, r21.xyzx
                          max r6.w, r6.w, l(0.000000)
                          log r6.w, r6.w
                          mul r6.w, r6.w, r8.w
                          exp r6.w, r6.w  // spot<0:NaN:Inf>
                
                #line 156
                          mul r24.z, r24.y, r24.y
                          mov r24.x, l(1.000000)
                          dp3 r7.w, r22.xyzx, r24.xyzx
                          div r7.w, r6.w, r7.w  // att<0:NaN:Inf>
                          mul r11.xyz, r6.wwww, r14.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                          mul r12.xyz, r7.wwww, r15.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                          mul r13.xyz, r7.wwww, r16.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 131
                        else 
                          mov r11.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                          mov r12.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                          mov r13.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                        endif 
                
                #line 183
                        mov r11.xyz, r11.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                        mov r12.xyz, r12.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                        mov r13.xyz, r13.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                      endif 
                    endif 
                  endif 
                
                #line 185
                  add r8.xyz, r8.xyzx, r11.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r9.xyz, r9.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r13.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r10.xyz, r10.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 173
                  iadd r5.w, r5.w, l(1)  // i<0>
                endloop 
                
                #line 190
                add r0.xyz, r8.xyzx, r9.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r10.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 159 "F:\Users\Axel\Documents\Projects\Devbox\Rendering\src\fx\Terrain.fx"
                mov r0.xyz, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 162
                mov r1.x, -cb0[71].x
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[71].y
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 165
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[72].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 168
                mul r0.w, r2.w, cb1[9].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 288 instruction slots used
                            
            };
            RasterizerState = SolidMode;
        }

    }

}

