//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    Light   gLights[10];                // Offset:    0, size: 1120
    float   gNumLights;                 // Offset: 1120, size:    4
    float3  gEyePosW;                   // Offset: 1124, size:   12
    float   gFogStart;                  // Offset: 1136, size:    4
    float   gFogRange;                  // Offset: 1140, size:    4
    float4  gFogColor;                  // Offset: 1152, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gTexTransform;             // Offset:  192, size:   64
    float4x4 gShadowTransform;          // Offset:  256, size:   64
    Material gMaterial;                 // Offset:  320, size:   48
    bool    gUseTexture;                // Offset:  368, size:    4
    bool    gUseNormalMap;              // Offset:  372, size:    4
    bool    gUseAnimation;              // Offset:  376, size:    4
    bool    gRenderingToShadowMap;      // Offset:  380, size:    4
    bool    gUseLighting;               // Offset:  384, size:    4
}

//
// 2 local object(s)
//
Texture2D gTexture;
SamplerState textureSampler
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 BasicTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  320
                //       float4 diffuse;                // Offset:  336
                //       float4 specular;               // Offset:  352
                //
                //   } gMaterial;                       // Offset:  320 Size:    48 [unused]
                //   bool gUseTexture;                  // Offset:  368 Size:     4 [unused]
                //   bool gUseNormalMap;                // Offset:  372 Size:     4 [unused]
                //   bool gUseAnimation;                // Offset:  376 Size:     4 [unused]
                //   bool gRenderingToShadowMap;        // Offset:  380 Size:     4 [unused]
                //   bool gUseLighting;                 // Offset:  384 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TANGENT                  0   xyzw        3     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TANGENT                  0   xyzw        3     NONE  float   xyzw
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // TEXCOORD                 1   xyzw        5     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xy
                dcl_output o5.xyzw
                dcl_temps 7
                
                #line 80 "F:\Users\Axel\Documents\Projects\Devbox\Rendering\src\fx\ScreenQuad.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                dp4 r3.x, v3.xyzw, cb0[0].xyzw  // vout<10:NaN:Inf>
                dp4 r3.y, v3.xyzw, cb0[1].xyzw  // vout<11:NaN:Inf>
                dp4 r3.z, v3.xyzw, cb0[2].xyzw  // vout<12:NaN:Inf>
                dp4 r3.w, v3.xyzw, cb0[3].xyzw  // vout<13:NaN:Inf>
                
                #line 85
                dp4 r4.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 88
                mov r5.xy, v2.xyxx  // vout<14,15>
                
                #line 91
                dp4 r6.x, r0.xyzw, cb0[16].xyzw  // vout<16:NaN:Inf>
                dp4 r6.y, r0.xyzw, cb0[17].xyzw  // vout<17:NaN:Inf>
                dp4 r6.z, r0.xyzw, cb0[18].xyzw  // vout<18:NaN:Inf>
                dp4 r6.w, r0.xyzw, cb0[19].xyzw  // vout<19:NaN:Inf>
                mov o0.xyzw, r4.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xyzw, r3.xyzw  // VS<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf,13:NaN:Inf>
                mov o5.xyzw, r6.xyzw  // VS<16:NaN:Inf,17:NaN:Inf,18:NaN:Inf,19:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o4.xy, r5.xyxx  // VS<14,15>
                ret 
                // Approximately 28 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // textureSampler                    sampler      NA          NA    0        1
                // gTexture                          texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TANGENT                  0   xyzw        3     NONE  float       
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // TEXCOORD                 1   xyzw        5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                
                #line 99 "F:\Users\Axel\Documents\Projects\Devbox\Rendering\src\fx\ScreenQuad.fx"
                sample_indexable(texture2d)(float,float,float,float) o0.xyzw, v4.xyxx, t0.xyzw, s0  // PS<0:Inf,1:Inf,2:Inf,3:Inf>
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

}

